{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.jsx","helpers/prepare-events.js","actions/events.js","components/ui/NavBar.jsx","helpers/calendar-messages.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","components/router/PrivateRoutes.jsx","components/router/PublicRoutes.jsx","components/router/AppRouter.jsx","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducers","combineReducers","ui","state","action","type","auth","payload","calendar","map","event","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinished","login","user","logout","useForm","initialstate","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword1","rPassword2","rName","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","validator","isEmail","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","console","log","placeholder","onChange","trim","lenght","prepareEvetns","end","moment","toDate","start","eventAddNew","eventClearActive","eventUpdated","eventDeleted","eventsLoaded","NavBar","useSelector","onClick","removeItem","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","closeModal","setFormValues","dateStart","setDateStart","dateEnd","setDateEnd","isValidTitle","setIsValidTitle","formValues","useEffect","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","evetos","startAccessor","endAccessor","onDoubleClickEvent","eventPropGetter","isSeleted","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoutes","isLoggedIn","Component","component","rest","props","to","PublicRoutes","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAEG,kBAFHA,EAGK,mBAHLA,EAMI,kBANJA,EAQO,sBARPA,EASS,wBATTA,EAUK,yBAVLA,EAWK,yBAXLA,EAYI,wBAZJA,EAaQ,sBAbRA,EAiBY,uCAjBZA,EAmBE,eAnBFA,EAuBE,gBCpBTC,EAAe,CACjBC,UAAU,G,QCURD,EAAe,CACjBE,OAAO,GACPC,YAAY,MCdVH,EAAe,CACjBI,WAAW,GCIFC,EAAeC,YAAgB,CACxCC,GDFqB,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAEvD,OAAQA,EAAOC,MACX,KAAKX,EAED,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAInB,KAAKL,EAED,OAAO,2BACAS,GADP,IAEIJ,WAAU,IAIlB,QACI,OAAOI,ICjBfG,KHCuB,WAAmC,IAAlCH,EAAiC,uDAAzBR,EAAcS,EAAW,uCACzD,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,uCACAS,GACAC,EAAOG,SAFd,IAGIX,UAAS,IAUjB,KAAKF,EACD,OAAO,2BACAS,GADP,IAEIP,UAAS,IAGjB,KAAKF,EACD,MAAO,CACHE,UAAS,GAGjB,QACI,OAAOO,IG5BfK,SFS2B,WAAkC,IAAjCL,EAAgC,uDAAxBR,EAAaS,EAAW,uCAG5D,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIL,YAAYM,EAAOG,UAG3B,KAAKb,EACD,kCACOS,GADP,IAEIN,OAAO,GAAD,mBAAKM,EAAMN,QAAX,CAAkBO,EAAOG,YAGvC,KAAKb,EACD,kCACOS,GADP,IAEIL,YAAY,OAGpB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAOM,EAAMN,OAAOY,KAChB,SAAAC,GAAK,OAAKA,EAAMC,KAAOP,EAAOG,QAAQI,GAAMP,EAAOG,QAAUG,OAIzE,KAAKhB,EACD,kCACOS,GADP,IAEIN,OAAOM,EAAMN,OAAOe,QAChB,SAAAF,GAAK,OAAKA,EAAMC,KAAOR,EAAML,YAAYa,MAE7Cb,YAAY,OAGpB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAO,YAAIO,EAAOG,WAG1B,KAAKb,EACD,OAAO,eACAC,GAGX,QACI,OAAOQ,MGjEbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAgBC,O,0DCVlBC,EAAUC,+CAGVC,EAAgB,SAAEC,EAAUC,GAAyB,IAAnBC,EAAkB,uDAAX,MAErCC,EAAG,UAAMN,EAAN,YAAiBG,GAG1B,MAAe,QAAXE,EACOE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAQ,CACJ,eAAe,oBAEnBC,KAAMC,KAAKC,UAAWP,MAM5BQ,EAAgB,SAAET,EAAUC,GAAyB,IAAnBC,EAAkB,uDAAX,MAErCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAMD,EAAK,CACdD,SACAG,QAAQ,CACJ,UAAUK,KAIXN,MAAMD,EAAK,CACdD,SACAG,QAAQ,CACJ,eAAe,mBACf,UAAUK,GAEdJ,KAAMC,KAAKC,UAAWP,MC4B5BY,EAAmB,iBAAO,CAC5BhC,KAAKX,IAGH4C,EAAQ,SAAEC,GAAF,MAAa,CACvBlC,KAAKX,EACLa,QAASgC,IAcPC,EAAS,iBAAO,CAACnC,KAAKX,I,0CCvFf+C,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAEnC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAGMC,EAAQ,WACVD,EAAUH,IAGRK,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAExBH,EAAU,2BACHD,GADE,kBAGJI,EAAOC,KAAOD,EAAOE,UAK9B,MAAO,CAACN,EAAOG,EAAkBD,I,OCbxBK,EAAc,WACvB,IAAMC,EAAWC,cAEjB,EAAkDZ,EAAQ,CACtDa,OAAO,uBACPC,UAAU,qBAFd,mBAAOC,EAAP,KAAwBC,EAAxB,KAKOH,EAAoBE,EAApBF,OAAOC,EAAaC,EAAbD,UAEd,EAAwDd,EAAQ,CAC5DiB,OAAO,GACPC,WAAW,GACXC,WAAW,GACXC,MAAM,KAJV,mBAAOC,EAAP,KAA2BC,EAA3B,KAOOL,EAAsCI,EAAtCJ,OAAOC,EAA+BG,EAA/BH,WAAWC,EAAoBE,EAApBF,WAAWC,EAASC,EAATD,MA8BpC,OACI,qBAAKG,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SA/BI,SAACC,GFxBL,IAACC,EAAOC,EEyB1BF,EAAEG,iBAEEC,IAAUC,QAAQjB,GAGlBF,GF9Bee,EE8BKb,EF9BEc,EE8BMb,EF7BpC,uCAAO,WAAOH,GAAP,iBAAAoB,EAAA,sEACgBjD,EAAc,OAAQ,CAAC4C,QAAOC,YAAW,QADzD,cACGK,EADH,gBAEgBA,EAAKC,OAFrB,QAEG5C,EAFH,QAIM6C,IACLxC,aAAayC,QAAQ,QAAS9C,EAAKI,OACnCC,aAAayC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnD1B,EAASd,EAAM,CACXyC,IAAKjD,EAAKiD,IACV9B,KAAKnB,EAAKmB,SAGd+B,IAAKC,KAAK,QAAQnD,EAAKoD,IAAI,SAb5B,2CAAP,wDE2BQC,QAAQC,IAAI,qBA2BJ,UACI,qBAAKpB,UAAU,aAAf,SACI,uBACI3D,KAAK,OACL2D,UAAU,eACVqB,YAAY,SACZpC,KAAK,SACLC,MAAOI,EACPgC,SAAU7B,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACI3D,KAAK,WACL2D,UAAU,eACVqB,YAAY,gBACZpC,KAAK,YACLC,MAAOK,EACP+B,SAAU7B,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACI3D,KAAK,SACL2D,UAAU,YACVd,MAAM,kBAMtB,sBAAKc,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAtDO,SAACC,GAE1B,OADAA,EAAEG,iBACCR,EAAM0B,OAAOC,OAAS,EACdR,IAAKC,KAAK,QAAQ,2CAA2C,SAEpEX,IAAUC,QAAQb,GAGnBC,IAAeC,EACPoB,IAAKC,KAAK,QAAQ,kCAA+B,cAG5D7B,GF1BsBe,EE0BCT,EF1BMU,EE0BCT,EF1BSV,EE0BEY,EFzB7C,uCAAO,WAAMT,GAAN,iBAAAoB,EAAA,sEAEgBjD,EAAc,WAAW,CAAC4C,QAAMC,WAASnB,QAAM,QAF/D,cAEGwB,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5C,EAHH,QAKK6C,IACJxC,aAAayC,QAAQ,QAAS9C,EAAKI,OACnCC,aAAayC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDK,QAAQC,IAAItD,GACZsB,EAASd,EAAM,CACXyC,IAAIjD,EAAKiD,IACT9B,KAAKnB,EAAKmB,QAEd+B,IAAKC,KAAK,QAAQ,gCAAgC,YAElDD,IAAKC,KAAK,QAAQnD,EAAKoD,IAAI,SAf5B,2CAAP,wDEmBeF,IAAKC,KAAK,QAAQ,oBAAoB,SFpB5B,IAACd,EAAOC,EAAUnB,GEoE3B,UACI,qBAAKe,UAAU,aAAf,SACI,uBACI3D,KAAK,OACL2D,UAAU,eACVqB,YAAY,SACZpC,KAAK,QACLC,MAAOW,EACPyB,SAAUvB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACI3D,KAAK,QACL2D,UAAU,eACVqB,YAAY,SACZpC,KAAK,SACLC,MAAOQ,EACP4B,SAAUvB,MAGlB,qBAAKC,UAAU,aAAf,SACA,uBACQ3D,KAAK,WACL2D,UAAU,eACVqB,YAAY,gBACZpC,KAAK,aACLC,MAAOS,EACP2B,SAAUvB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACI3D,KAAK,WACL2D,UAAU,eACVqB,YAAY,0BACZpC,KAAK,aACLC,MAAOU,EACP0B,SAAUvB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACI3D,KAAK,SACL2D,UAAU,YACVd,MAAM,+B,iBC1IzBuC,EAAgB,WAAkB,IAAjB5F,EAAgB,uDAAP,GAEnC,OAAOA,EAAOY,KAAI,SAACyD,GAAD,mBAAC,eACZA,GADW,IAEdwB,IAAIC,IAAOzB,EAAEwB,KAAKE,SAClBC,MAAMF,IAAOzB,EAAE2B,OAAOD,eC6BxBE,EAAc,SAACpF,GAAD,MAAY,CAC5BL,KAAKX,EACLa,QAAQG,IAQCqF,EAAmB,iBAAO,CACnC1F,KAAKX,IA4BHsG,GAAe,SAACtF,GAAD,MAAY,CAC7BL,KAAKX,EACLa,QAASG,IA0BPuF,GAAe,iBAAO,CACxB5F,KAAKX,IA2BHwG,GAAe,SAACrG,GAAD,MAAa,CAC9BQ,KAAKX,EACLa,QAAQV,IChICsG,GAAS,WAElB,IAAOlD,EAAQmD,aAAY,SAAAjG,GAAK,OAAIA,EAAMG,QAAnC2C,KAEDG,EAAWC,cAMjB,OACI,sBAAKW,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKf,IAGJ,yBACGe,UAAU,yBACVqC,QAbS,WACjBjD,ED6H8B,CAClC/C,KAAKX,IC7HD0D,GLmEG,SAACA,GAEJjB,aAAamE,WAAW,SACxBnE,aAAamE,WAAW,mBACxBlD,EAASZ,SK9DJ,UAGI,mBAAGwB,UAAU,wBACd,iD,kBCzBHuC,I,OAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNvG,MAAO,SACPwG,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCXNC,GAAgB,SAAC,GAAa,IAAZ3G,EAAW,EAAXA,MAEpB4G,EAAe5G,EAAf4G,MAAO/E,EAAQ7B,EAAR6B,KACd,OACI,gCACI,+BAAO+E,IACP,yCAAY/E,EAAKU,Y,wCCLhBsE,GAAc,iBAAO,CAC9BlH,KAAKX,ICKH8H,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIjBC,KAAMC,cAAc,SAEpB,IAAMC,GAAMvC,MAASwC,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAC3CC,GAAUJ,GAAIK,QAAQF,IAAI,EAAE,SAE5BG,GAAY,CACdlB,MAAM,GACNmB,MAAM,GACN5C,MAAMqC,GAAItC,SACVF,IAAI4C,GAAQ1C,UAGH8C,GAAgB,WAGzB,IAAO3I,EAAaqG,aAAY,SAAAjG,GAAK,OAAIA,EAAMD,MAAxCH,UACAD,EAAesG,aAAY,SAAAjG,GAAK,OAAIA,EAAMK,YAA1CV,YACDsD,EAAWC,cAEXsF,EAAa,WAEfvF,EDlC2B,CAC/B/C,KAAKX,ICkCD0D,EAAS2C,KAET6C,EAAcJ,KAIlB,EAAkC7F,mBAASuF,GAAItC,UAA/C,mBAAOiD,EAAP,KAAkBC,EAAlB,KACA,EAA8BnG,mBAAS2F,GAAQ1C,UAA/C,mBAAOmD,EAAP,KAAgBC,EAAhB,KAEA,EAAwCrG,oBAAS,GAAjD,mBAAOsG,EAAP,KAAqBC,EAArB,KACA,EAAoCvG,mBAAS6F,IAA7C,mBAAOW,EAAP,KAAmBP,EAAnB,KAEOH,EAA4BU,EAA5BV,MAAOnB,EAAqB6B,EAArB7B,MAAOzB,EAAcsD,EAAdtD,MAAOH,EAAOyD,EAAPzD,IAE5B0D,qBAAU,WAGFR,EADA9I,GAIc0I,MAGnB,CAAC1I,EAAY8I,IAEhB,IAAM7F,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAExB4F,EAAc,2BACPO,GADM,kBAGRnG,EAAOC,KAAOD,EAAOE,UA6C9B,OACI,eAAC,KAAD,CACImG,OAAQtJ,EAERuJ,eAAgBX,EAChBY,MAAO/B,GACPgC,eAAgB,IAChBxF,UAAU,QACVyF,iBAAiB,cAPrB,UAWQ,6BAAK3J,EAAa,gBAAkB,mBACpC,uBACA,uBACIkE,UAAU,YACVC,SAtCS,SAACC,GACtBA,EAAEG,iBACF,IL9CyB3D,EK8CnBgJ,EAAc/D,IAAOE,GACrB8D,EAAYhE,IAAOD,GAEzB,OAAGgE,EAAYE,cAAcD,GAClB3E,IAAKC,KAAK,QAAQ,gDAAgD,SAE1EqC,EAAM/B,OAAOsE,OAAS,EACdX,GAAgB,IAIvB9F,EADDtD,GLxDsBY,EKyDKyI,ELxDlC,uCAAO,WAAM/F,GAAN,iBAAAoB,EAAA,+EAKoBvC,EAAc,UAAD,OAAWvB,EAAMC,IAAKD,EAAM,OAL7D,cAKO+D,EALP,gBAMoBA,EAAKC,OANzB,QAMO5C,EANP,QAQS6C,GACJvB,EAAS4C,GAAatF,IAEtBsE,IAAKC,KAAK,QAAQnD,EAAKoD,IAAI,SAXhC,kDAeCC,QAAQC,IAAR,MAfD,0DAAP,uDA9C4B,SAAC1E,GAC7B,8CAAO,WAAM0C,EAAU0G,GAAhB,uBAAAtF,EAAA,+DAEmBsF,IAAWxJ,KAAzByE,EAFL,EAEKA,IAAK9B,EAFV,EAEUA,KAFV,kBAMoBhB,EAAc,SAASvB,EAAM,QANjD,cAMO+D,EANP,gBAOoBA,EAAKC,OAPzB,QAOO5C,EAPP,QASS6C,KAEJjE,EAAMC,GAAKmB,EAAKiI,OAAOpJ,GACvBD,EAAM6B,KAAO,CACTyH,IAAIjF,EACJ9B,KAAKA,GAETG,EAAS0C,EAAYpF,KAhB1B,kDAsBCyE,QAAQC,IAAR,MAtBD,0DAAP,wDKuGiB6E,CAAiBd,IAG9BD,GAAgB,QAChBP,MAiBQ,UAII,sBAAK3E,UAAU,aAAf,UACI,wDACA,cAAC,KAAD,CACIsB,SA7DE,SAACpB,GACvB4E,EAAa5E,GAEb0E,EAAc,2BACPO,GADM,IAETtD,MAAM3B,MAyDUhB,MAAO2F,EACP7E,UAAU,oBAIlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,KAAD,CACQsB,SA7DJ,SAACpB,GACrB8E,EAAW9E,GAEX0E,EAAc,2BACPO,GADM,IAETzD,IAAIxB,MAyDgBgG,QAASrB,EACT3F,MAAO6F,EACP/E,UAAU,oBAItB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACI3D,KAAK,OACLgF,YAAY,uBACZpC,KAAK,QACLC,MAAOoE,EACP6C,aAAa,MACb7E,SAAUvC,EACViB,UAAS,wBAAmBiF,GAAgB,gBAEhD,uBAAOtI,GAAG,YAAYqD,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACI3D,KAAK,OACL2D,UAAU,eACVqB,YAAY,QACZ+E,KAAK,IACLnH,KAAK,QACLC,MAAOuF,EACPnD,SAAUvC,IAEd,uBAAOpC,GAAG,YAAYqD,UAAU,uBAAhC,yCAGJ,yBACI3D,KAAK,SACL2D,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDCvLXqG,GAAY,WAErB,IAAMjH,EAAWC,cAKjB,OACI,wBACIW,UAAU,sBACVqC,QAPgB,WACpBjD,EAASmE,OAIT,SAGQ,mBAAGvD,UAAU,mBCXhBsG,GAAiB,WAE1B,IAAMlH,EAAWC,cAMjB,OACI,yBACIW,UAAU,4BACVqC,QAPa,WACjBjD,EPwEJ,uCAAO,WAAOA,EAAU0G,GAAjB,mBAAAtF,EAAA,6DAEI7D,EAAMmJ,IAAWtJ,SAASV,YAA1Ba,GAFJ,kBAKoBsB,EAAc,UAAD,OAAWtB,GAAK,GAAG,UALpD,cAKO8D,EALP,gBAMoBA,EAAKC,OANzB,QAMO5C,EANP,QAOS6C,GACJvB,EAAS6C,MAETjB,IAAKC,KAAK,QAAQnD,EAAKoD,IAAI,SAVhC,kDAeCC,QAAQC,IAAR,MAfD,0DAAP,0DOpEI,UAGQ,mBAAGpB,UAAU,iBACb,uDCAhB2B,IAAO4E,OAAO,MACd,IAAMC,GAAYC,aAAgB9E,KAErB+E,GAAiB,WAE1B,MAA6BtE,aAAY,SAAAjG,GAAK,OAAIA,EAAMK,YAAjDX,EAAP,EAAOA,OAAOC,EAAd,EAAcA,YACRsD,EAAWC,cAEjB,EAAgCV,mBAASR,aAAaC,QAAQ,aAAe,SAA7E,mBAAOuI,EAAP,KAAiBC,EAAjB,KAEAxB,qBAAU,WAENhG,ERgFJ,uCAAO,WAAMA,GAAN,mBAAAoB,EAAA,+EAIoBvC,EAAc,UAJlC,cAIOwC,EAJP,gBAKoBA,EAAKC,OALzB,OAKO5C,EALP,OAOO+I,EAAUpF,EAAc3D,EAAKgJ,QAEhChJ,EAAK6C,IAEJvB,EAAS8C,GAAa2E,IAX3B,kDAgBC1F,QAAQC,IAAR,MAhBD,0DAAP,yDQ9EG,CAAChC,IAEJ,IAsBO2B,EAAOqB,aAAY,SAAAjG,GAAK,OAAIA,EAAMG,QAAlCyE,IAoBP,OACI,sBAAKf,UAAU,kBAAf,UAEI,cAAC,GAAD,IAEA,cAAC,KAAD,CACIwG,UAAWA,GACX3K,OAAQA,EACRkL,cAAc,QACdC,YAAY,MACZzE,SAAUA,GACV0E,mBArDU,SAAC/G,GAGnBd,EAASmE,OAmDD2D,gBA9Ba,SAACxK,EAAMmF,EAAMH,EAAIyF,GAEtC,IAAOnB,EAAOtJ,EAAM6B,KAAbyH,IAWP,MAAM,CACFT,MAVU,CACV6B,gBAAkBrG,IAAQiF,EAAM,UAAW,UAC3CqB,aAAc,MACdC,QAAS,MACTC,QAAQ,QACRC,MAAM,WAsBFC,cAhDU,SAACvH,GAEnBd,ERDkC,CACtC/C,KAAKX,EACLa,QQD4B2D,KA+ChBwH,aA3CS,SAACxH,GAClBd,EAAS2C,MA2CD4F,YAAY,EACZC,OAxCQ,SAAC1H,GACjB0G,EAAY1G,GACZ/B,aAAayC,QAAQ,WAAWV,IAuCxB2H,KAAMlB,EACNmB,WAAc,CACVpL,MAAM2G,MAId,cAAC,GAAD,IACCvH,GAAe,cAAC,GAAD,IAChB,cAAC,GAAD,Q,uCChGCiM,GAAgB,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,WAAqBC,EAAuB,EAAjCC,UAAuBC,EAAU,mBAEvE,OACI,cAAC,IAAD,2BAAWA,GAAX,IACID,UAAW,SAACE,GAAD,OACNJ,EACD,cAACC,EAAD,eAAeG,IACd,cAAC,IAAD,CAAUC,GAAI,gB,8BCLlBC,GAAe,SAAC,GAA8C,IAA7CN,EAA4C,EAA5CA,WAAqBC,EAAuB,EAAjCC,UAAuBC,EAAU,mBACtE,OACI,cAAC,IAAD,2BAAWA,GAAX,IACID,UAAW,SAACE,GAAD,OACLJ,EAED,cAAC,IAAD,CAAUK,GAAG,MADd,cAACJ,EAAD,eAAeG,SCGlBG,GAAY,WAErB,IAAMnJ,EAAWC,cAEjB,EAAwB+C,aAAY,SAAAjG,GAAK,OAAIA,EAAMG,QAA5CV,EAAP,EAAOA,SAAUmF,EAAjB,EAAiBA,IAQjB,OANAqE,qBAAU,WAENhG,Ef0BJ,uCAAO,WAAMA,GAAN,iBAAAoB,EAAA,sEAEgBvC,EAAc,cAF9B,cAEGwC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG5C,EAHH,QAIK6C,IACJxC,aAAayC,QAAQ,QAAS9C,EAAKI,OACnCC,aAAayC,QAAQ,mBAAmB,IAAIC,MAAOC,WACnD1B,EAASd,EAAM,CACXyC,IAAIjD,EAAKiD,IACT9B,KAAKnB,EAAKmB,SAIdG,EAASf,KAbV,2CAAP,yDexBG,CAACe,IAEDxD,EACQ,2CAIP,cAAC,IAAD,UAGI,8BAEI,eAAC,IAAD,WAEI,cAAC,GAAD,CACI4M,OAAK,EACLC,KAAK,SACLP,UAAW/I,EACX6I,aAAgBjH,IAGpB,cAAC,GAAD,CACI0H,KAAK,IACLD,OAAK,EACLN,UAAWxB,GACXsB,aAAgBjH,IAEpB,cAAC,IAAD,CAAUsH,GAAG,cC7CpBK,GAAc,WACvB,OAEI,cAAC,IAAD,CAAUzL,MAAOA,EAAjB,SACI,cAAC,GAAD,O,OCFZ0L,IAASC,OACL,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56b50b6c.chunk.js","sourcesContent":["export const types = {\n\n    uiOpenModal:'[UI] Open Modal',\n    uiCloseModal: '[UI] Close Modal',\n\n\n    eventAddNew: '[Event] Add New',\n    eventStartAddNew:'[Event] Start Add New',\n    eventSetActive: '[Event] Set Active ',\n    eventClearActive: '[Event] Clear Active ',\n    eventUpdated: '[Event] Event Updated ',\n    eventDeleted: '[Event] Event Deleted]',\n    eventLoaded: '[Event] Events Loaded',\n    eventClearState: '[Event] Clear State',\n\n\n    //authChecking:'[Auth] Checking login state',\n    authCheckingFinished:'[Auth] Checking login state Finished',\n    authStartLogin:'[Auth] Start Login',\n    authLogin: '[Auth] Login',\n    authStartRegister: '[Auth] Start Register',\n    //authRegister: '[Auth] Register',\n    authStartTokenRenew: '[Auth] Start token renew',\n    authLogout:'[Auth] Logout'\n\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking: true,\n    // uid:null,\n    // name:null\n}\n\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n\n        // case types.authRegister:\n        //     return {\n        //         ...state,\n        //         checking:false,\n        //         ...action.payload\n        //     }\n\n        case types.authCheckingFinished:\n            return {\n                ...state,\n                checking:false\n            }\n\n        case types.authLogout:\n            return {\n                checking:false\n            }\n    \n        default:\n            return state;\n    }\n}\n","\nimport { types } from \"../types/types\";\n// {\n//     id:'jiiuhuyhjlx',\n//     title: 'Cumpleaños de tita',\n//     start: moment().toDate(),//new Date()\n//     end: moment().add(2, 'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     notes:'comprar pastel',\n//     user:{\n//         _id: '123',\n//         name:'Erick'\n//     }\n// }\nconst initialState = {\n    events:[],\n    activeEvent:null\n};\n\nexport const calendarReducer = (state = initialState,action) => {\n    \n\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent:action.payload\n            }\n            \n        case types.eventAddNew:\n            return{\n                ...state,\n                events:[...state.events,action.payload]\n            }\n\n        case types.eventClearActive:\n            return{\n                ...state,\n                activeEvent:null\n            }\n\n        case types.eventUpdated:\n            return{\n                ...state,\n                events:state.events.map(\n                    event => (event.id === action.payload.id) ? action.payload : event \n                )\n            }\n    \n        case types.eventDeleted:\n            return{\n                ...state,\n                events:state.events.filter(\n                    event => (event.id !== state.activeEvent.id)\n                ),\n                activeEvent:null\n            }\n\n        case types.eventLoaded:\n            return{\n                ...state,\n                events:[...action.payload]\n            }\n\n        case types.eventClearState:\n            return {\n                ...initialState\n            };\n\n        default:\n            return state;\n\n        }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) { \n        case types.uiOpenModal:\n            \n            return {\n                ...state,\n                modalOpen: true\n            }\n          \n\n        case types.uiCloseModal:\n\n            return {\n                ...state,\n                modalOpen:false\n            }\n\n    \n        default:\n            return state;\n    }\n\n\n}\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\n\nexport const rootReducers = combineReducers({\n    ui:uiReducer,\n    auth:authReducer,\n    calendar:calendarReducer,\n});","import { createStore, applyMiddleware,compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducers } from \"../reducers/rootReducers\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","const baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchSinToken = ( endpoint, data, method='GET' ) => {\n\n    const url = `${baseUrl}/${endpoint}`;\n\n    \n    if( method === 'GET'){\n        return fetch(url);\n    }else{\n        return fetch(url, {\n            method,\n            headers:{\n                'Content-type':'application/json',\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\nconst fetchConToken = ( endpoint, data, method='GET' ) => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if( method === 'GET'){\n        return fetch(url, {\n            method,\n            headers:{\n                'x-token':token\n            }\n        });\n    }else{\n        return fetch(url, {\n            method,\n            headers:{\n                'Content-type':'application/json',\n                'x-token':token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import Swal from \"sweetalert2\";\nimport { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\n\n//import { eventClearState } from \"./events\";\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\n        const body = await resp.json();\n\n        if( body.ok ){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name:body.name\n            }));\n        }else{\n            Swal.fire('Error',body.msg,'error');\n        }\n\n    }\n} \n\nexport const startRegister = (email, password, name) => {\n    return async(dispatch) => {\n\n        const resp = await fetchSinToken('auth/new',{email,password,name},'POST');\n        const body = await resp.json();\n\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            console.log(body);\n            dispatch(login({\n                uid:body.uid,\n                name:body.name\n            }));\n            Swal.fire('Exito','Se ha registrado exitosamente','success');\n        }else{\n            Swal.fire('Error',body.msg,'error');\n        }\n        //const resp = \n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n        \n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid:body.uid,\n                name:body.name\n            }));\n            \n        }else{\n            dispatch(checkingFinished());\n        }\n\n\n\n    }\n}\n\nconst checkingFinished = () => ({\n    type:types.authCheckingFinished\n});\n\nconst login = ( user ) => ({\n    type:types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        //localStorage.clear();\n        localStorage.removeItem('token');\n        localStorage.removeItem('token-init-date');\n        dispatch(logout());\n        //dispatch(eventClearState());\n\n    }\n}\n\nconst logout = () => ({type:types.authLogout})\n\n// const register = ( user ) => ({\n//     type:types.authLogin,\n//     payload: user\n// });","import {useState} from 'react';\n\nexport const useForm = (initialstate = {}) => {\n\n    const [values, setValues] = useState(initialstate);\n\n\n    const reset = () => {\n        setValues(initialstate);\n    }\n\n    const handleInputChange = ({target}) => {\n\n        setValues({\n            ...values,\n            //description : h\n            [target.name]: target.value \n             \n        });\n    }\n\n    return [values,handleInputChange,reset];\n\n}","import React from 'react';\nimport './login.css';\nimport validator from 'validator';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail:'erick.doev@gmail.com',\n        lPassword:'Lidf@LKMDer34rew',\n\n    });\n    const {lEmail,lPassword} = formLoginValues;\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rEmail:'',\n        rPassword1:'',\n        rPassword2:'',\n        rName:''\n        \n    });\n    const {rEmail,rPassword1,rPassword2,rName} = formRegisterValues\n\n    \n\n    const handleLoginSubmit = (e) => {\n        e.preventDefault();\n\n        if(!validator.isEmail(lEmail)){\n            console.log('correo no valido');\n        }else{\n            dispatch(startLogin(lEmail, lPassword));\n        }\n    }\n\n    const handleRegisterSubmit = (e) => {\n        e.preventDefault();\n        if(rName.trim().lenght < 3){\n            return Swal.fire('Error','El nombre debe ser mayor de 3 caracteres','error');\n        }\n        if(!validator.isEmail(rEmail)){\n            return Swal.fire('Error','Correo no validos','error');\n        }\n        if(rPassword1 !== rPassword2){\n            return Swal.fire('Error','Las contraseñas no coinciden','error');\n        }\n\n        dispatch(startRegister(rEmail,rPassword1,rName));\n        \n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLoginSubmit}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegisterSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                        <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import moment from 'moment';\n\nexport const prepareEvetns = (events = []) => {\n    \n    return events.map((e) =>({\n        ...e,\n        end:moment(e.end).toDate(),\n        start:moment(e.start).toDate()\n        \n    }));\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvetns } from \"../helpers/prepare-events\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async(dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n        \n        try {\n\n            const resp = await fetchConToken('events',event,'POST');\n            const body = await resp.json();\n\n            if(body.ok){\n                \n                event.id = body.evento.id;\n                event.user = {\n                    _id:uid,\n                    name:name\n                };\n                dispatch(eventAddNew(event));\n               \n            }\n\n        } catch (error) {\n            \n            console.log(error);\n\n        }\n\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type:types.eventAddNew,\n    payload:event\n});\n\nexport const eventSetActive = (event) => ({\n    type:types.eventSetActive,\n    payload:event\n});\n\nexport const eventClearActive = () => ({\n    type:types.eventClearActive\n});\n\n\nexport const eventStartUpdate = (event) => {\n    return async(dispatch) => {\n\n        try {\n\n            //console.log(event);\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch(eventUpdated(event));\n            }else{\n                Swal.fire('Error',body.msg,'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\n\n\nconst eventUpdated = (event) => ({\n    type:types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n\n        const {id} = getState().calendar.activeEvent;\n        //console.log(activeEvent);\n        try {\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\n            const body = await resp.json();\n            if(body.ok){\n                dispatch(eventDeleted());\n            }else{\n                Swal.fire('Error',body.msg,'error');\n            }\n            \n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({\n    type:types.eventDeleted\n\n});\n\nexport const eventsStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken('events' );\n            const body = await resp.json();\n\n            const eventos = prepareEvetns(body.evetos);\n            \n            if(body.ok){\n                //console.log(body.evetos);\n                dispatch(eventsLoaded(eventos));\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventsLoaded = (events) => ({\n    type:types.eventLoaded,\n    payload:events\n});\n\nexport const eventClearState = () => ({\n    type:types.eventClearState\n});","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { eventClearState} from '../../actions/events';\n\nexport const NavBar = () => {\n\n    const {name} = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n    const handleLogout = () => {\n        dispatch(eventClearState());\n        dispatch(startLogout());\n        \n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n             \n             <button \n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}>\n                 <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n             </button>\n                         \n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n\n    const {title, user} = event;\n    return (\n        <div>\n            <span>{title}</span>\n            <strong> - {user.name}</strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\n\n\nexport const uiOpenModal = () => ({\n    type:types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type:types.uiCloseModal\n});","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport  Swal  from \"sweetalert2\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\nconst endDate = now.clone().add(1,'hours');\n\nconst initEvent = {\n    title:'',\n    notes:'',\n    start:now.toDate(),\n    end:endDate.toDate()\n}\n\nexport const CalendarModal = () => {\n\n\n    const {modalOpen} = useSelector(state => state.ui);\n    const {activeEvent} = useSelector(state => state.calendar)\n    const dispatch = useDispatch();\n\n    const closeModal = () => {\n\n        dispatch(uiCloseModal());\n        dispatch(eventClearActive());\n\n        setFormValues(initEvent);\n            \n    }\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\n\n    const [isValidTitle, setIsValidTitle] = useState(true);\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const {notes, title, start, end} = formValues;\n\n    useEffect(() => {\n\n        if( activeEvent ){\n            setFormValues( activeEvent )\n            //si activeEvent es null\n        }else{\n            setFormValues(initEvent)\n        }\n\n    }, [activeEvent,setFormValues]);\n\n    const handleInputChange = ({target}) => {\n\n        setFormValues({\n            ...formValues,\n            //computar el nombre de la propiedad\n            [target.name]: target.value\n        });\n\n    }\n\n    const handleStartChange = (e) => {\n        setDateStart(e);\n        //console.log(e);\n        setFormValues({\n            ...formValues,\n            start:e\n        })\n    }\n\n    const handleEndChange = (e) => {\n        setDateEnd(e);\n        //console.log(e);\n        setFormValues({\n            ...formValues,\n            end:e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if(momentStart.isSameOrAfter(momentEnd)){\n            return Swal.fire('Error','La fecha de fin debe ser mayor a la de inicio','error');\n        }\n        if(title.trim().length < 2){\n            return setIsValidTitle(false);\n        }   \n        \n        if(activeEvent){\n            dispatch(eventStartUpdate(formValues));\n        }else{\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setIsValidTitle(true);\n        closeModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n            \n        >\n                           \n                <h1>{activeEvent? 'Editar evento' : 'Agregar evento'}</h1>\n                <hr />\n                <form \n                    className=\"container\"\n                    onSubmit={handleSubmitForm}>\n\n                    <div className=\"form-group\">\n                        <label>Fecha y hora inicio</label>\n                        <DateTimePicker\n                            onChange={handleStartChange}\n                            value={dateStart}\n                            className=\"form-control\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Fecha y hora fin</label>\n                        <DateTimePicker\n                                onChange={handleEndChange}\n                                minDate={dateStart}\n                                value={dateEnd}\n                                className=\"form-control\"\n                            />\n                    </div>\n\n                    <hr />\n                    <div className=\"form-group\">\n                        <label>Titulo y notas</label>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Título del evento\"\n                            name=\"title\"\n                            value={title}\n                            autoComplete=\"off\"\n                            onChange={handleInputChange}\n                            className={`form-control ${!isValidTitle && 'is-invalid'}`}\n                        />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <textarea \n                            type=\"text\" \n                            className=\"form-control\"\n                            placeholder=\"Notas\"\n                            rows=\"5\"\n                            name=\"notes\"\n                            value={notes}\n                            onChange={handleInputChange}\n                        ></textarea>\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-outline-primary btn-block\"\n                    >\n                        <i className=\"far fa-save\"></i>\n                        <span> Guardar</span>\n                    </button>\n\n                </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n    const handleOpenModal = () => {\n        dispatch(uiOpenModal());\n    }   \n\n    return (\n        <button \n            className=\"btn btn-primary fab\"\n            onClick={handleOpenModal}>\n                <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    }\n\n    return (\n        <button \n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDelete}>\n                <i className=\"fas fa-trash\"></i>\n                <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { NavBar } from '../ui/NavBar'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport { Calendar,momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport 'moment/locale/es';\n\nimport { messages } from '../../helpers/calendar-messages';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActive, eventSetActive, eventsStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const {events,activeEvent} = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        \n        dispatch(eventsStartLoading());\n\n    }, [dispatch]);\n\n    const onDoubleClick = (e) => {\n        //console.log('abrir modal');\n        \n        dispatch(uiOpenModal());\n        \n    }\n\n    const onSelectEvent = (e) => {\n\n        dispatch(eventSetActive(e));\n        \n    }\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActive());\n\n    }\n    \n    const onViewChange =(e) => {\n        setLastView(e);\n        localStorage.setItem('lastView',e);\n    }\n    const {uid} = useSelector(state => state.auth)\n\n    const eventStyleGetter = (event,start,end,isSeleted) => {\n        //console.log(event.user._id);\n        const {_id} = event.user; \n\n        const style = {\n            backgroundColor:( uid === _id)? '#367CF7' :'#465660',\n            borderRadius: '0px',\n            opacity: '0.8',\n            display:'block',\n            color:'white',\n            \n        }\n\n        return{\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n\n            <NavBar />  \n\n            <Calendar \n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                onDoubleClickEvent={onDoubleClick}\n                eventPropGetter={eventStyleGetter}\n                onSelectEvent={onSelectEvent}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                onView={onViewChange}\n                view={lastView}\n                components = {{\n                    event:CalendarEvent\n                }} \n            />\n\n            <AddNewFab />    \n            {activeEvent && <DeleteEventFab /> } \n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoutes = ({isLoggedIn,component:Component,...rest}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isLoggedIn)?\n                <Component {...props}/>\n                :<Redirect to ='/login'/>\n            )}\n        \n        />\n            \n        \n    )\n}\n\nPrivateRoutes.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\n","\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\n//export const PublicRoutes = ({exact,isLoggedIn,component:Component,path}) => {\n    //en rest se guarda el resto de props osea, exact y path que mandamos de approuter\nexport const PublicRoutes = ({isLoggedIn,component:Component,...rest}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isLoggedIn)?\n                <Component {...props}/>\n                :<Redirect to=\"/\"/>\n            )}\n        />\n\n    )\n}\n\nPublicRoutes.propTypes = {\n    isLoggedIn:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { startChecking } from '../../actions/auth';\n\nimport { LoginScreen } from '../auth/LoginScreen';\nimport { CalendarScreen } from '../calendar/CalendarScreen';\nimport { PrivateRoutes } from './PrivateRoutes';\nimport { PublicRoutes } from './PublicRoutes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const {checking, uid} = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        dispatch(startChecking());\n\n    }, [dispatch]);\n\n    if(checking){\n        return <h5>Espere...</h5>\n    }\n\n    return (\n        <Router>\n              \n\n            <div>\n\n                <Switch>\n\n                    <PublicRoutes \n                        exact\n                        path='/login'\n                        component={LoginScreen} \n                        isLoggedIn={ !! uid }\n                    />\n\n                    <PrivateRoutes \n                        path='/'\n                        exact\n                        component={CalendarScreen}\n                        isLoggedIn={ !! uid }\n                    />\n                    <Redirect to='/'/>\n\n                </Switch>\n            </div>\n        </Router>\n\n\n    )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nimport { AppRouter } from './components/router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        \n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n        \n    )\n}\n","import React from 'react'\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n//console.log(process.env);\n\nReactDOM.render(\n    <CalendarApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}